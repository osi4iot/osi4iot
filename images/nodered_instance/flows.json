[{"id":"d352370f7f2ece3e","type":"debug","z":"b368b8c9de06e94b","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":310,"y":480,"wires":[]},{"id":"2b0d42bb243c3f31","type":"comment","z":"b368b8c9de06e94b","name":"OSI4IOT MQTT Broker can be tested sending a message to the 'MQTT_TOPIC_TEST' topic.","info":"","x":350,"y":440,"wires":[]},{"id":"f17816e1841b9ca7","type":"mqtt in","z":"b368b8c9de06e94b","name":"Mqtt topic test","topic":"MQTT_TOPIC_TEST","qos":"2","datatype":"utf8","broker":"6346b608.d007a8","nl":false,"rap":true,"rh":0,"inputs":0,"x":130,"y":480,"wires":[["d352370f7f2ece3e"]]},{"id":"160a6a139f6cb439","type":"comment","z":"b368b8c9de06e94b","name":"Initialization and reading Digital Twin Mqtt Topics in Group","info":"","x":250,"y":560,"wires":[]},{"id":"540ece2724fd2a96","type":"inject","z":"b368b8c9de06e94b","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":600,"wires":[["7e5ae8c3f32116ae"]]},{"id":"7e5ae8c3f32116ae","type":"function","z":"b368b8c9de06e94b","name":"Initialization","func":"let dTMqttTopics = {};\ndTMqttTopics = global.get('dTMqttTopics') || {};\nmsg.payload = dTMqttTopics;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"// Code added here will be run once\n// whenever the node is started.\n// Code added here will be run once\n// whenever the node is started.\nconst token = env.get(\"TOKEN\");\nconst groupId = env.get(\"GROUP_ID\");\nconst initialization = global.get(\"initialization\");\nconst getDTMqttTopics = global.get(\"getDTMqttTopics\");\n\nlet pyodide = global.get('pyodide', \"memory\") || null;\nlet pythonLibraries = global.get('pythonLibraries', \"memory\") || null;\nlet mlModels = global.get('mlModels', \"memory\") || null;\n\nnode.status({ fill: \"yellow\", shape: \"dot\", text: \"Initializing\" });\nif (token !== \"\" && groupId !== \"0\") {\n    const dTMqttTopics = await getDTMqttTopics();\n    global.set('dTMqttTopics', dTMqttTopics);\n    node.status({ fill: \"green\", shape: \"dot\", text: \"Ready\" })\n}","finalize":"","libs":[],"x":330,"y":600,"wires":[["18a48115ee347716"]]},{"id":"18a48115ee347716","type":"debug","z":"b368b8c9de06e94b","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":600,"wires":[]},{"id":"6346b608.d007a8","type":"mqtt-broker","name":"OSI4IOT_MQTT_8883","broker":"mosquitto","port":"8883","tls":"b278b10.69bfb5","clientid":"MQTT_CLIENT_ID","autoConnect":true,"usetls":true,"compatmode":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"b278b10.69bfb5","type":"tls-config","name":"","cert":"/data/certs/client.crt","key":"/data/certs/client.key","ca":"/data/certs/ca.crt","certname":"","keyname":"","caname":"","servername":"","verifyservercert":false,"alpnprotocol":""}]